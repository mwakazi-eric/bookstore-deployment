apiVersion: v1
kind: Namespace
metadata:
  name: bookstore-dev
---
apiVersion: v1
kind: Secret
metadata:
  name: bookstore-dev-secrets
  namespace: bookstore-dev
type: Opaque
stringData:
  POSTGRES_PASSWORD: bookstore_dev_password
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bookstore-dev-configmap
  namespace: bookstore-dev
data:
  POSTGRES_DB: bookstore_dev_db
  POSTGRES_USER: bookstore_dev_user
  init.sql: |
    CREATE DATABASE bookstore_dev_db;
    CREATE USER bookstore_dev_user WITH ENCRYPTED PASSWORD 'bookstore_dev_password';
    GRANT ALL PRIVILEGES ON DATABASE bookstore_dev_db TO bookstore_dev_user;

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: bookstore-pv
  labels:
    app: bookstore
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/postgres
  persistentVolumeReclaimPolicy: Retain
  storageClassName: ""
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: bookstore-pvc
  namespace: bookstore-dev
  labels:
    app: bookstore
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeName: bookstore-pv
  storageClassName: ""
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: bookstore-dev
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: bookstore-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:16
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: bookstore_dev_db
            - name: POSTGRES_USER
              value: bookstore_dev_user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: bookstore-dev-secrets
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: bookstore-pvc
        - name: init-script
          configMap:
            name: bookstore-dev-configmap
